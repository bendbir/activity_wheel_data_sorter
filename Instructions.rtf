{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 activity_wheel_gui.py\
Benjamin Doyle\
8/17/2017\
\

\b Installation / Setup:\

\b0 - Make sure you have Python installed on your computer.  
\b activity_wheel_gui.py
\b0  was written in 
\b Python 2.7.3
\b0 , but it should work with other versions.\
- Place the script, activity_wheel.py in it\'92s own folder.  I named my folder 
\b \'93python_activity_wheel\'94
\b0 .  Make sure there is an 
\b \'93input\'94
\b0  and 
\b \'93output\'94
\b0  folder in the same folder as activity_wheel.py.  Input is where we place the .xls files we want data taken out of, output is where the final .csv file is sent.\
\

\b Running the python script:\

\b0 - Take the activity wheel .xls files you want combined, place them in the \'93input\'94 folder.  You may group the .xls files however you choose, the name of the .xls file will appear .csv output file so you will be able to organize them later.\
- From terminal, navigate to the directory with the python script.  In my case this folder is \'93python_activity_wheel\'94.\
- in terminal, type this command:  
\b python ./activity_wheel_gui.py.  
\b0 Alternatively, run the python script through an IDE such as atom or pycharm.\
- Follow prompts to enter the wheel numbers you used, as well as the desired output file name.\
\
NOTE:\
If one of the wheels does not have any running activity the program will crash.  The program will only function properly if each session has the same running wheels active.\
}